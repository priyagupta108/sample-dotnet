# name: Build, Pack, and Publish to GPR

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Setup .NET SDK
#       uses: actions/setup-dotnet@v3
#       with:
#         dotnet-version: '7.0.x'

#     - name: Restore dependencies
#       run: dotnet restore

#     - name: Build project
#       run: dotnet build --configuration Release

#     - name: Pack project
#       run: dotnet pack --configuration Release --output ./nupkg

#     - name: Publish to GitHub Packages
#       run: dotnet nuget push ./nupkg/*.nupkg -s https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json -k ${{ secrets.GITHUB_TOKEN }}


name: TEST

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          architecture: ${{ matrix.arch }}
# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Setup .NET SDK
#       uses: actions/setup-dotnet@v4
#       with:
#         dotnet:
#           - version: 8.0.x
#             arch: x64
#           - version: 8.0.x
#             arch: arm64

#     - name: Restore dependencies
#       run: dotnet restore

#     - name: Build project
#       run: dotnet build --configuration Release

#     - name: Pack project
#       run: dotnet pack --configuration Release --output ./nupkg

#     - name: Publish to GitHub Packages
#       run: dotnet nuget push ./nupkg/*.nupkg -s https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json -k ${{ secrets.GITHUB_TOKEN }}
